type: edu
files:
  - name: task.py
    visible: true
    placeholders:
      - offset: 41
        length: 355
        placeholder_text: '...'
        initial_state:
          length: 3
          offset: 45
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          dp = [[0] * n for _ in range(m)]
              for i in range(m):
                  dp[i][0] = 1
              for j in range(n):
                  dp[0][j] = 1
              for i in range(1, m):
                  for j in range(1, n):
                      dp[i][j] = dp[i - 1][j] + dp[i][j - 1]
              return dp[m - 1][n - 1]
        selected: false
        status: Solved
        is_visible: false
    learner_created: false
  - name: tests/test_task.py
    visible: false
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
  - name: tests/__init__.py
    visible: false
    learner_created: false
  - name: img.png
    visible: true
    is_binary: true
    learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Mon, 27 Jan 2025 16:32:01 UTC"
record: -1
